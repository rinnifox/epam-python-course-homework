print('Введите список неотрицательных целых чисел')
string = input().split()

while 'cancel' not in string:

    numbers_list = (list(map(int, string)))  # transformation of the string to the list of integers
    min_set = set()                          # creating the set for storage the positive integers, which are not in list
    next_num = 0                             # var for storage of the next positive integer

    if 1 not in numbers_list:
        print('Наименьшее положительное число, не входящее в список - ', 1)
        print('Введите список неотрицательных целых чисел')
        string = input().split()
    else:
        for elem in numbers_list:
            next_num = elem + 1
            if next_num in numbers_list:
                continue
            else:
                min_set.add(next_num)
        print('Наименьшее целое положительное число, не входящее в список - ', min(min_set))
        print('Введите список неотрицательных целых чисел')
        string = input().split()

else:
    print('Bye')


#  В лучшем случае процедура поиска наименьшего целого положительного числа, не входящего в список, работает за
#  постоянное время O(1), когда наименьшее из всех положительных целых чисел, а именно 1, не входит в введенный
#  пользователем список, и выполнение этого условия препятствует выполнению дальнейшего цикла.

#  В среднем случае, когда 1 входит в список, однако есть пропущенные числа на промежутке от 1 до max, программа входит
#  в цикл и тогда поиск осуществляется за линейное время т. к. он выполняется полностью за 1 цикл for, который 1 раз
#  проходит по всем элементам введенного пользователем списка, обновляя множество отсутствующих положительных целых
#  чисел и выбирая в конце работы минимальное из них. В таком случае, вычислительная сложность алгоритма напрямую
#  зависит от числа элементов n, то есть O(n).

#  В худшем случае, когда в списке присутствуют все положительные целые числа от 1 до max, процедура работает также за
#  линейное время, проходясь по всем элементам списка и выдавая в качестве результата значение (max + 1)



