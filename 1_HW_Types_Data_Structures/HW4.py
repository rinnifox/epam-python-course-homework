print('Введите неотрицательные целые числа через пробел')
string = input().split()

while 'cancel' not in string:

    numbers_list = (list(map(int, string)))
    next_num = 0
    min_num = 2

    if 1 not in numbers_list:
        print('Наименьшее положительное число, не входящее в список - ', 1)
        print('Введите неотрицательные целые числа через пробел')
        string = input().split()
    else:
        for elem in numbers_list:
            next_num = elem + 1
            if elem != min_num:
                if next_num not in numbers_list:
                    if next_num < min_num:
                        min_num=next_num
            else:
                min_num = next_num

        print('Наименьшее целое положительное число, не входящее в список - ', min_num)
        print('Введите неотрицательные целые числа через пробел')
        string = input().split()

else:
    print('Bye')

#  В лучшем случае процедура поиска наименьшего целого положительного числа, не входящего в список, работает за
#  линейное время O(n), когда наименьшее из всех положительных целых чисел, а именно 1, не входит в введенный
#  пользователем список. Поиск в списке занимает O(n) времени и выполнение этого условия препятствует выполнению
#  дальнейших действий.

#  В среднем случае, когда 1 входит в список, однако есть пропущенные числа на промежутке от 1 до max, программа входит
#  в цикл и тогда поиск осуществляется за время О(n^3), т. к. помимо уже произведенного поиска в строке за О(n) времени,
#  программа заходит в цикл, который проходит по всем элементам списка за O(n), а затем проверяет наличие слeдующего
#  элемента в списке, что также занимает O(n) времени.

#  В худшем случае, когда в списке присутствуют все положительные целые числа от 1 до max, процедура работает также за
#  кубическое время, выдавая в качестве результата значение (max + 1).
